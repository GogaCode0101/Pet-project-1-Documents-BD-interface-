-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

-- Создание последовательностей
CREATE SEQUENCE IF NOT EXISTS "акты_выполненных_работ_допсог_id_seq";
CREATE SEQUENCE IF NOT EXISTS "акты_приема_передачи_материал_id_seq";
CREATE SEQUENCE IF NOT EXISTS "дополнительные_соглашения_под_id_seq";
CREATE SEQUENCE IF NOT EXISTS "позиции_акта_дополнительных_р_id_seq";
CREATE SEQUENCE IF NOT EXISTS "позиции_акта_работ_допсоглаше_id_seq";
CREATE SEQUENCE IF NOT EXISTS "позиции_дополнительного_согла_id_seq";
CREATE SEQUENCE IF NOT EXISTS "протоколы_распределения_возна_id_seq";
CREATE SEQUENCE IF NOT EXISTS "роли_участников_социального_н_id_seq";
CREATE SEQUENCE IF NOT EXISTS "стороны_акта_дополнительных_р_id_seq";
CREATE SEQUENCE IF NOT EXISTS "стороны_акта_работ_допсоглаше_id_seq";
CREATE SEQUENCE IF NOT EXISTS "стороны_договора_подряда_физл_id_seq";
CREATE SEQUENCE IF NOT EXISTS "стороны_дополнительного_согла_id_seq";
CREATE SEQUENCE IF NOT EXISTS "стороны_протокола_вознагражде_id_seq";
CREATE SEQUENCE IF NOT EXISTS "участники_протокола_вознаграж_id_seq";

-- Сброс последовательностей
ALTER SEQUENCE IF EXISTS "акты_выполненных_работ_допсог_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "акты_приема_передачи_материал_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "дополнительные_соглашения_под_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "позиции_акта_дополнительных_р_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "позиции_акта_работ_допсоглаше_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "позиции_дополнительного_согла_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "протоколы_распределения_возна_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "роли_участников_социального_н_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "стороны_акта_дополнительных_р_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "стороны_акта_работ_допсоглаше_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "стороны_договора_подряда_физл_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "стороны_дополнительного_согла_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "стороны_протокола_вознагражде_id_seq" RESTART WITH 1;
ALTER SEQUENCE IF EXISTS "участники_протокола_вознаграж_id_seq" RESTART WITH 1;

CREATE TABLE IF NOT EXISTS public."акты_выполненных_работ_допсоглаше"
(
    id integer NOT NULL DEFAULT nextval('"акты_выполненных_работ_допсог_id_seq"'::regclass),
    "соглашение_id" integer NOT NULL,
    "дата_составления" date NOT NULL,
    "общая_сумма" numeric(15, 2) NOT NULL,
    "качество_работ" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "срок_гарантии" integer NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "акты_выполненных_работ_допсогл_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."акты_выполненных_работ_физлиц"
(
    id serial NOT NULL,
    "договор_id" integer NOT NULL,
    "дата_составления" date NOT NULL,
    "общая_сумма" numeric(15, 2) NOT NULL,
    "качество_работ" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "срок_гарантии" integer NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "акты_выполненных_работ_физлиц_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."акты_дополнительных_работ"
(
    id serial NOT NULL,
    "договор_id" integer NOT NULL,
    "дата_составления" date NOT NULL,
    "основание" text COLLATE pg_catalog."default" NOT NULL,
    "общая_сумма" numeric(15, 2) NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "акты_дополнительных_работ_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."акты_оказания_услуг"
(
    id serial NOT NULL,
    "договор_id" integer NOT NULL,
    "дата_составления" date NOT NULL,
    "период_оказания_услуг" date NOT NULL,
    "общая_сумма" numeric(15, 2) NOT NULL,
    "качество_услуг" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "акты_оказания_услуг_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."акты_приема_передачи_материалов"
(
    id integer NOT NULL DEFAULT nextval('"акты_приема_передачи_материал_id_seq"'::regclass),
    "договор_id" integer NOT NULL,
    "дата_составления" date NOT NULL,
    "место_составления" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "общая_сумма" numeric(15, 2) NOT NULL,
    "условия_хранения" text COLLATE pg_catalog."default" NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "акты_приема_передачи_материало_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."акты_сдачи_приемки_работ"
(
    id serial NOT NULL,
    "договор_id" integer NOT NULL,
    "дата_составления" date NOT NULL,
    "место_составления" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "общая_сумма" numeric(15, 2) NOT NULL,
    "качество_работ" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "срок_гарантии" integer NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "акты_сдачи_приемки_работ_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."города"
(
    id serial NOT NULL,
    "регион_id" integer NOT NULL,
    "название" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "города_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."договоры_оказания_услуг"
(
    id serial NOT NULL,
    "номер_договора" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "дата_заключения" date NOT NULL,
    "срок_выполнения" date NOT NULL,
    "сумма_договора" numeric(15, 2) NOT NULL,
    "предмет_договора" text COLLATE pg_catalog."default" NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "договоры_оказания_услуг_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."договоры_подряда"
(
    id serial NOT NULL,
    "номер_договора" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "дата_заключения" date NOT NULL,
    "срок_выполнения" date NOT NULL,
    "сумма_договора" numeric(15, 2) NOT NULL,
    "предмет_договора" text COLLATE pg_catalog."default" NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    "гарантийный_срок" integer NOT NULL,
    CONSTRAINT "договоры_подряда_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."договоры_подряда_физлиц"
(
    id serial NOT NULL,
    "номер_договора" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "дата_заключения" date NOT NULL,
    "срок_выполнения" date NOT NULL,
    "сумма_договора" numeric(15, 2) NOT NULL,
    "предмет_договора" text COLLATE pg_catalog."default" NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    "гарантийный_срок" integer NOT NULL,
    "адрес_выполнения_работ" text COLLATE pg_catalog."default" NOT NULL,
    "условия_приемки" text COLLATE pg_catalog."default" NOT NULL,
    "условия_хранения" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "договоры_подряда_физлиц_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."договоры_социального_найма"
(
    id serial NOT NULL,
    "город_id" integer NOT NULL,
    "предмет_id" integer NOT NULL,
    "срок" interval NOT NULL,
    "дата_заключения" date NOT NULL,
    CONSTRAINT "договоры_социального_найма_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."дополнительные_работы"
(
    id serial NOT NULL,
    "договор_id" integer NOT NULL,
    "наименование" text COLLATE pg_catalog."default" NOT NULL,
    "единица_измерения" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "количество" numeric(10, 2) NOT NULL,
    "цена" numeric(15, 2) NOT NULL,
    "сумма" numeric(15, 2) NOT NULL,
    CONSTRAINT "дополнительные_работы_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."дополнительные_соглашения_подряд"
(
    id integer NOT NULL DEFAULT nextval('"дополнительные_соглашения_под_id_seq"'::regclass),
    "договор_id" integer NOT NULL,
    "номер_соглашения" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "дата_составления" date NOT NULL,
    "предмет_соглашения" text COLLATE pg_catalog."default" NOT NULL,
    "изменения_условий" text COLLATE pg_catalog."default" NOT NULL,
    "сумма_изменений" numeric(15, 2) NOT NULL,
    "срок_выполнения" date NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    "условия_хранения" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "дополнительные_соглашения_подр_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."лица"
(
    id serial NOT NULL,
    "фио" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "регистрация" text COLLATE pg_catalog."default" NOT NULL,
    "почтовый_адрес" text COLLATE pg_catalog."default" NOT NULL,
    "паспорт_серия" character varying(10) COLLATE pg_catalog."default" NOT NULL,
    "паспорт_номер" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "паспорт_выдан" text COLLATE pg_catalog."default" NOT NULL,
    "телефон" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "лица_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."материалы"
(
    id serial NOT NULL,
    "наименование" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "единица_измерения" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "количество" numeric(10, 2) NOT NULL,
    "цена" numeric(15, 2) NOT NULL,
    "сумма" numeric(15, 2) NOT NULL,
    CONSTRAINT "материалы_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."позиции_акта_дополнительных_работ"
(
    id integer NOT NULL DEFAULT nextval('"позиции_акта_дополнительных_р_id_seq"'::regclass),
    "акт_id" integer NOT NULL,
    "работа_id" integer NOT NULL,
    "количество" numeric(10, 2) NOT NULL,
    "качество" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "сумма" numeric(15, 2) NOT NULL,
    "срок_выполнения" date NOT NULL,
    CONSTRAINT "позиции_акта_дополнительных_ра_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."позиции_акта_материалов"
(
    id serial NOT NULL,
    "акт_id" integer NOT NULL,
    "материал_id" integer NOT NULL,
    "количество" numeric(10, 2) NOT NULL,
    "качество" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "сумма" numeric(15, 2) NOT NULL,
    "условия_хранения" text COLLATE pg_catalog."default" NOT NULL,
    "срок_хранения" date NOT NULL,
    CONSTRAINT "позиции_акта_материалов_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."позиции_акта_работ_допсоглашения"
(
    id integer NOT NULL DEFAULT nextval('"позиции_акта_работ_допсоглаше_id_seq"'::regclass),
    "акт_id" integer NOT NULL,
    "позиция_соглашения_id" integer NOT NULL,
    "количество" numeric(10, 2) NOT NULL,
    "качество" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "срок_гарантии" integer NOT NULL,
    "срок_выполнения" date NOT NULL,
    CONSTRAINT "позиции_акта_работ_допсоглашен_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."позиции_акта_работ_физлиц"
(
    id serial NOT NULL,
    "акт_id" integer NOT NULL,
    "наименование_работы" text COLLATE pg_catalog."default" NOT NULL,
    "единица_измерения" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "количество" numeric(10, 2) NOT NULL,
    "цена" numeric(15, 2) NOT NULL,
    "сумма" numeric(15, 2) NOT NULL,
    "качество" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "срок_гарантии" integer NOT NULL,
    "срок_выполнения" date NOT NULL,
    CONSTRAINT "позиции_акта_работ_физлиц_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."позиции_акта_сдачи_приемки"
(
    id serial NOT NULL,
    "акт_id" integer NOT NULL,
    "наименование_работы" text COLLATE pg_catalog."default" NOT NULL,
    "единица_измерения" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "количество" numeric(10, 2) NOT NULL,
    "цена" numeric(15, 2) NOT NULL,
    "сумма" numeric(15, 2) NOT NULL,
    "качество" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "срок_гарантии" integer NOT NULL,
    "срок_выполнения" date NOT NULL,
    CONSTRAINT "позиции_акта_сдачи_приемки_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."позиции_акта_услуг"
(
    id serial NOT NULL,
    "акт_id" integer NOT NULL,
    "наименование_услуги" text COLLATE pg_catalog."default" NOT NULL,
    "единица_измерения" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "количество" numeric(10, 2) NOT NULL,
    "цена" numeric(15, 2) NOT NULL,
    "сумма" numeric(15, 2) NOT NULL,
    "качество" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "срок_выполнения" date NOT NULL,
    CONSTRAINT "позиции_акта_услуг_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."позиции_дополнительного_соглашен"
(
    id integer NOT NULL DEFAULT nextval('"позиции_дополнительного_согла_id_seq"'::regclass),
    "соглашение_id" integer NOT NULL,
    "наименование_работы" text COLLATE pg_catalog."default" NOT NULL,
    "единица_измерения" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "количество" numeric(10, 2) NOT NULL,
    "цена" numeric(15, 2) NOT NULL,
    "сумма" numeric(15, 2) NOT NULL,
    "срок_выполнения" date NOT NULL,
    "условия_хранения" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "позиции_дополнительного_соглаш_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."предметы"
(
    id serial NOT NULL,
    "улица_id" integer NOT NULL,
    "дом" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "квартира" character varying(20) COLLATE pg_catalog."default",
    "площадь" double precision NOT NULL,
    "назначение" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "предметы_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."протоколы_распределения_вознагра"
(
    id integer NOT NULL DEFAULT nextval('"протоколы_распределения_возна_id_seq"'::regclass),
    "договор_id" integer NOT NULL,
    "дата_составления" date NOT NULL,
    "общая_сумма" numeric(15, 2) NOT NULL,
    "основание" text COLLATE pg_catalog."default" NOT NULL,
    "место_составления" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "протоколы_распределения_вознаг_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."регионы"
(
    id serial NOT NULL,
    "название" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "регионы_pkey" PRIMARY KEY (id),
    CONSTRAINT "регионы_название_key" UNIQUE ("название")
);

CREATE TABLE IF NOT EXISTS public."роли_участников_социального_найма"
(
    id integer NOT NULL DEFAULT nextval('"роли_участников_социального_н_id_seq"'::regclass),
    "договор_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "роли_участников_социального_на_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_акта_дополнительных_работ"
(
    id integer NOT NULL DEFAULT nextval('"стороны_акта_дополнительных_р_id_seq"'::regclass),
    "акт_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_акта_дополнительных_ра_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_акта_материалов"
(
    id serial NOT NULL,
    "акт_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_акта_материалов_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_акта_работ_допсоглашения"
(
    id integer NOT NULL DEFAULT nextval('"стороны_акта_работ_допсоглаше_id_seq"'::regclass),
    "акт_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_акта_работ_допсоглашен_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_акта_работ_физлиц"
(
    id serial NOT NULL,
    "акт_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_акта_работ_физлиц_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_акта_сдачи_приемки"
(
    id serial NOT NULL,
    "акт_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_акта_сдачи_приемки_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_акта_услуг"
(
    id serial NOT NULL,
    "акт_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_акта_услуг_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_договора_подряда"
(
    id serial NOT NULL,
    "договор_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_договора_подряда_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_договора_подряда_физлиц"
(
    id integer NOT NULL DEFAULT nextval('"стороны_договора_подряда_физл_id_seq"'::regclass),
    "договор_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_договора_подряда_физли_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_договора_услуг"
(
    id serial NOT NULL,
    "договор_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_договора_услуг_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_дополнительного_соглашен"
(
    id integer NOT NULL DEFAULT nextval('"стороны_дополнительного_согла_id_seq"'::regclass),
    "соглашение_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    "условия_оплаты" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_дополнительного_соглаш_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."стороны_протокола_вознаграждения"
(
    id integer NOT NULL DEFAULT nextval('"стороны_протокола_вознагражде_id_seq"'::regclass),
    "протокол_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "роль" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "стороны_протокола_вознагражден_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."улицы"
(
    id serial NOT NULL,
    "город_id" integer NOT NULL,
    "название" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "улицы_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."участники_протокола_вознагражден"
(
    id integer NOT NULL DEFAULT nextval('"участники_протокола_вознаграж_id_seq"'::regclass),
    "протокол_id" integer NOT NULL,
    "лицо_id" integer NOT NULL,
    "сумма_вознаграждения" numeric(15, 2) NOT NULL,
    "доля_процентов" numeric(5, 2) NOT NULL,
    "основание" text COLLATE pg_catalog."default" NOT NULL,
    "реквизиты_банка" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "участники_протокола_вознагражд_pkey" PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public."акты_выполненных_работ_допсоглаше"
    ADD CONSTRAINT "акты_выполненных_р_соглашение_id_fkey" FOREIGN KEY ("соглашение_id")
    REFERENCES public."дополнительные_соглашения_подряд" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."акты_выполненных_работ_физлиц"
    ADD CONSTRAINT "акты_выполненных_рабо_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_подряда_физлиц" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."акты_дополнительных_работ"
    ADD CONSTRAINT "акты_дополнительных_р_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_подряда" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."акты_оказания_услуг"
    ADD CONSTRAINT "акты_оказания_услуг_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_оказания_услуг" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."акты_приема_передачи_материалов"
    ADD CONSTRAINT "акты_приема_передачи__договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_подряда" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."акты_сдачи_приемки_работ"
    ADD CONSTRAINT "акты_сдачи_приемки_ра_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_подряда" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."города"
    ADD CONSTRAINT "города_регион_id_fkey" FOREIGN KEY ("регион_id")
    REFERENCES public."регионы" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."договоры_социального_найма"
    ADD CONSTRAINT "договоры_социального__предмет_id_fkey" FOREIGN KEY ("предмет_id")
    REFERENCES public."предметы" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."договоры_социального_найма"
    ADD CONSTRAINT "договоры_социального_на_город_id_fkey" FOREIGN KEY ("город_id")
    REFERENCES public."города" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."дополнительные_работы"
    ADD CONSTRAINT "дополнительные_работ_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_подряда" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."дополнительные_соглашения_подряд"
    ADD CONSTRAINT "дополнительные_согла_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_подряда" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_акта_дополнительных_работ"
    ADD CONSTRAINT "позиции_акта_дополните_работа_id_fkey" FOREIGN KEY ("работа_id")
    REFERENCES public."дополнительные_работы" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_акта_дополнительных_работ"
    ADD CONSTRAINT "позиции_акта_дополнительн_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_дополнительных_работ" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_акта_материалов"
    ADD CONSTRAINT "позиции_акта_материа_материал_id_fkey" FOREIGN KEY ("материал_id")
    REFERENCES public."материалы" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_акта_материалов"
    ADD CONSTRAINT "позиции_акта_материалов_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_приема_передачи_материалов" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_акта_работ_допсоглашения"
    ADD CONSTRAINT "позиции_акта_ра_позиция_соглаш_fkey" FOREIGN KEY ("позиция_соглашения_id")
    REFERENCES public."позиции_дополнительного_соглашен" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_акта_работ_допсоглашения"
    ADD CONSTRAINT "позиции_акта_работ_допсог_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_выполненных_работ_допсоглаше" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_акта_работ_физлиц"
    ADD CONSTRAINT "позиции_акта_работ_физлиц_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_выполненных_работ_физлиц" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_акта_сдачи_приемки"
    ADD CONSTRAINT "позиции_акта_сдачи_приемк_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_сдачи_приемки_работ" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_акта_услуг"
    ADD CONSTRAINT "позиции_акта_услуг_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_оказания_услуг" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."позиции_дополнительного_соглашен"
    ADD CONSTRAINT "позиции_дополните_соглашение_id_fkey" FOREIGN KEY ("соглашение_id")
    REFERENCES public."дополнительные_соглашения_подряд" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."предметы"
    ADD CONSTRAINT "предметы_улица_id_fkey" FOREIGN KEY ("улица_id")
    REFERENCES public."улицы" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."протоколы_распределения_вознагра"
    ADD CONSTRAINT "протоколы_распределе_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_подряда" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."роли_участников_социального_найма"
    ADD CONSTRAINT "роли_участников_социа_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_социального_найма" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."роли_участников_социального_найма"
    ADD CONSTRAINT "роли_участников_социальн_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_дополнительных_работ"
    ADD CONSTRAINT "стороны_акта_дополнитель_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_дополнительных_работ"
    ADD CONSTRAINT "стороны_акта_дополнительн_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_дополнительных_работ" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_материалов"
    ADD CONSTRAINT "стороны_акта_материалов_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_приема_передачи_материалов" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_материалов"
    ADD CONSTRAINT "стороны_акта_материалов_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_работ_допсоглашения"
    ADD CONSTRAINT "стороны_акта_работ_допсо_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_работ_допсоглашения"
    ADD CONSTRAINT "стороны_акта_работ_допсог_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_выполненных_работ_допсоглаше" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_работ_физлиц"
    ADD CONSTRAINT "стороны_акта_работ_физли_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_работ_физлиц"
    ADD CONSTRAINT "стороны_акта_работ_физлиц_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_выполненных_работ_физлиц" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_сдачи_приемки"
    ADD CONSTRAINT "стороны_акта_сдачи_прием_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_сдачи_приемки"
    ADD CONSTRAINT "стороны_акта_сдачи_приемк_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_сдачи_приемки_работ" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_услуг"
    ADD CONSTRAINT "стороны_акта_услуг_акт_id_fkey" FOREIGN KEY ("акт_id")
    REFERENCES public."акты_оказания_услуг" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_акта_услуг"
    ADD CONSTRAINT "стороны_акта_услуг_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_договора_подряда"
    ADD CONSTRAINT "стороны_договора_подр_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_подряда" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_договора_подряда"
    ADD CONSTRAINT "стороны_договора_подряда_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_договора_подряда_физлиц"
    ADD CONSTRAINT "стороны_договора_под_договор_id_fkey1" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_подряда_физлиц" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_договора_подряда_физлиц"
    ADD CONSTRAINT "стороны_договора_подряд_лицо_id_fkey1" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_договора_услуг"
    ADD CONSTRAINT "стороны_договора_услу_договор_id_fkey" FOREIGN KEY ("договор_id")
    REFERENCES public."договоры_оказания_услуг" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_договора_услуг"
    ADD CONSTRAINT "стороны_договора_услуг_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_дополнительного_соглашен"
    ADD CONSTRAINT "стороны_дополните_соглашение_id_fkey" FOREIGN KEY ("соглашение_id")
    REFERENCES public."дополнительные_соглашения_подряд" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_дополнительного_соглашен"
    ADD CONSTRAINT "стороны_дополнительного__лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_протокола_вознаграждения"
    ADD CONSTRAINT "стороны_протокола_во_протокол_id_fkey" FOREIGN KEY ("протокол_id")
    REFERENCES public."протоколы_распределения_вознагра" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."стороны_протокола_вознаграждения"
    ADD CONSTRAINT "стороны_протокола_вознаг_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."улицы"
    ADD CONSTRAINT "улицы_город_id_fkey" FOREIGN KEY ("город_id")
    REFERENCES public."города" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."участники_протокола_вознагражден"
    ADD CONSTRAINT "участники_протокола__протокол_id_fkey" FOREIGN KEY ("протокол_id")
    REFERENCES public."протоколы_распределения_вознагра" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."участники_протокола_вознагражден"
    ADD CONSTRAINT "участники_протокола_возн_лицо_id_fkey" FOREIGN KEY ("лицо_id")
    REFERENCES public."лица" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

-- Добавление ограничений уникальности
ALTER TABLE "договоры_подряда" ADD CONSTRAINT "dp_num_key" UNIQUE ("номер_договора");
ALTER TABLE "договоры_подряда_физлиц" ADD CONSTRAINT "dpf_num_key" UNIQUE ("номер_договора");
ALTER TABLE "договоры_оказания_услуг" ADD CONSTRAINT "dou_num_key" UNIQUE ("номер_договора");
ALTER TABLE "дополнительные_соглашения_подряд" ADD CONSTRAINT "dsp_num_key" UNIQUE ("номер_соглашения");
ALTER TABLE "улицы" ADD CONSTRAINT "ul_city_name_key" UNIQUE ("город_id", "название");
ALTER TABLE "города" ADD CONSTRAINT "city_reg_name_key" UNIQUE ("регион_id", "название");

-- Изменение каскадного удаления на RESTRICT для критичных таблиц
ALTER TABLE "договоры_социального_найма" DROP CONSTRAINT IF EXISTS "договоры_социального__предмет_id_fkey";
ALTER TABLE "договоры_социального_найма" ADD CONSTRAINT "dsn_subj_fkey" 
    FOREIGN KEY ("предмет_id") REFERENCES "предметы" (id) ON DELETE RESTRICT;

ALTER TABLE "договоры_социального_найма" DROP CONSTRAINT IF EXISTS "договоры_социального_на_город_id_fkey";
ALTER TABLE "договоры_социального_найма" ADD CONSTRAINT "dsn_city_fkey" 
    FOREIGN KEY ("город_id") REFERENCES "города" (id) ON DELETE RESTRICT;

-- Добавление NOT NULL для обязательных полей
ALTER TABLE "предметы" ALTER COLUMN "квартира" SET NOT NULL;

-- Ограничение длины полей
ALTER TABLE "лица" ALTER COLUMN "фио" TYPE varchar(100);
ALTER TABLE "лица" ALTER COLUMN "паспорт_серия" TYPE varchar(4);
ALTER TABLE "лица" ALTER COLUMN "паспорт_номер" TYPE varchar(6);
ALTER TABLE "лица" ALTER COLUMN "телефон" TYPE varchar(15);

-- Добавление проверок для числовых полей
ALTER TABLE "договоры_подряда" ADD CONSTRAINT "dp_sum_check" 
    CHECK ("сумма_договора" > 0);
ALTER TABLE "договоры_подряда" ADD CONSTRAINT "dp_warr_check" 
    CHECK ("гарантийный_срок" > 0);

ALTER TABLE "договоры_подряда_физлиц" ADD CONSTRAINT "dpf_sum_check" 
    CHECK ("сумма_договора" > 0);
ALTER TABLE "договоры_подряда_физлиц" ADD CONSTRAINT "dpf_warr_check" 
    CHECK ("гарантийный_срок" > 0);

ALTER TABLE "договоры_оказания_услуг" ADD CONSTRAINT "dou_sum_check" 
    CHECK ("сумма_договора" > 0);

-- Добавление индексов для часто используемых полей
CREATE INDEX IF NOT EXISTS "idx_dp_num" ON "договоры_подряда" ("номер_договора");
CREATE INDEX IF NOT EXISTS "idx_dp_date" ON "договоры_подряда" ("дата_заключения");
CREATE INDEX IF NOT EXISTS "idx_person_name" ON "лица" ("фио");
CREATE INDEX IF NOT EXISTS "idx_person_pass" ON "лица" ("паспорт_серия", "паспорт_номер");

END;